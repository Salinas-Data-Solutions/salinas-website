---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';
import navigation from '@/data/navigation.json';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
import LanguageSwitcher from '~/components/widgets/LanguageSwitcher.jsx';

let data = navigation.headerData;
if (Astro.currentLocale === 'de') {
  data = navigation.headerDataDE;
}
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    ' !bg-page top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0  ',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default py-3 px-3 md:px-6 mx-auto w-full',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-3 md:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={`/${Astro.currentLocale}`}>
        <Logo />
      </a>
      <div class="flex gap-2 items-center md:hidden">
        <LanguageSwitcher client:load currentLocale={Astro.currentLocale || ''} />
        <ToggleMenu />
      </div>
    </div>

    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center justify-between"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          data.links.map(({ text, href }) => (
            <a
              class:list={[
                `hover:text-link dark:hover:text-white px-4 py-3 flex items-center ${text === 'Contact' || text === 'Kontakt' ? 'underline' : ''}`,
                { 'aw-link-active': href === currentPath },
              ]}
              href={`/${Astro.currentLocale}${href}`}
            >
              {text}
            </a>
          ))
        }
      </ul>
      <div class="md:hidden items-center flex justify-between w-full md:w-auto mt-10">
        {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
        {
          data.action ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              <Button
                {...data.action}
                class="btn py-2.5 px-4 md:px-12 font-semibold shadow-none text-sm w-auto uppercase"
              />
            </span>
          ) : (
            ''
          )
        }
      </div>
    </nav>
    <div class="hidden md:flex flex-col md:flex-row md:self-center md:justify-end p-3 md:p-0 w-full md:w-auto">
      <div class="hidden items-center md:flex justify-between w-full md:w-auto">
        <LanguageSwitcher client:load currentLocale={Astro.currentLocale || ''} />
        {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
        {
          data.action ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              <Button
                {...data.action}
                class="btn py-2.5 px-4 md:px-12 font-semibold shadow-none text-sm w-auto uppercase"
              />
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
