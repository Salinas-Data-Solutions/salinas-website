---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/Layout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsBlogPost, blogPostRobots, getStaticPathsEbooks } from '~/utils/blog';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';
import Image from '~/components/common/Image.astro';

export const prerender = true;

export const getStaticPaths = async () => {
  const data = await getStaticPathsEbooks({ locale: 'en' });

  console.log(data, 'data');
  return data;
};

const { ebook } = Astro.props;
console.log(ebook, 'ebook');

const url = getCanonical(getPermalink(ebook.permalink, 'ebook'));
const image = (await findImage(ebook.image)) as ImageMetadata | string | undefined;

const metadata = merge({
  title: ebook.title,
  description: ebook.description,
  robots: {
    index: blogPostRobots?.index,
    follow: blogPostRobots?.follow,
  },
  openGraph: {
    type: 'article',
    ...(image
      ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
      : {}),
  },
}) as MetaData;

console.log(ebook.whatsInsideImage);
---

<Layout metadata={metadata}>
  <div class="container mx-auto py-64">
    <div class="grid grid-cols-[25%_1fr] gap-24 max-w-5xl mx-auto min-h-[600px]">
      <div class="block relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[140%] overflow-hidden shadow-lg">
        {
          ebook.image && (
            <Image
              src={ebook.image || ''}
              class="absolute inset-0 object-cover w-full h-full mb-6  shadow-lg"
              widths={[400, 400]}
              width={400}
              sizes="(max-width: 900px) 400px, 900px"
              alt={ebook.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )
        }
      </div>
      <div class="text-center">
        <h1 class="text-5xl">{ebook.title}</h1>
        <p class="mt-10">{ebook.description}</p>

        <div
          class="pipedriveWebForms flex items-start"
          data-pd-webforms="https://webforms.pipedrive.com/f/cee5svNkl0HQWXKuKBlIEprpN83lKEJvZXA2x3gsq5vdFy8OyAPNqQ7u0MwhlxdAj1"
        >
          <script src="https://webforms.pipedrive.com/f/loader"></script>
        </div>
      </div>
    </div>
    <div class="grid grid-cols-2 gap-10">
      <div>
        <h2 class="mt-6 text-3xl text-white lg:mt-8 sm:text-4xl lg:text-5xl !leading-relaxed">What's inside</h2>
        <p class="mt-2 text-primary">
          {ebook.whatsInsideDescription}
        </p>

        <ul class="list-disc ml-4 mt-4">
          {ebook.bulletPoints.map((point) => <li class="mt-2 ">{point}</li>)}
        </ul>
        <div
          class="pipedriveWebForms flex items-start mt-4"
          data-pd-webforms="https://webforms.pipedrive.com/f/cee5svNkl0HQWXKuKBlIEprpN83lKEJvZXA2x3gsq5vdFy8OyAPNqQ7u0MwhlxdAj1"
        >
          <script src="https://webforms.pipedrive.com/f/loader"></script>
        </div>
      </div>
      {
        ebook.whatsInsideImage && (
          <Image
            src={ebook.whatsInsideImage || ''}
            class="inset-0 object-cover w-full h-full mb-6  shadow-lg"
            widths={[400, 900]}
            width={900}
            sizes="(max-width: 900px) 400px, 900px"
            alt={ebook.title}
            aspectRatio="16:12"
            loading="lazy"
            decoding="async"
          />
        )
      }
    </div>
    <!-- <SinglePost post={{ ...post, image: image }} url={url}>
    {post.Content ? <post.Content /> : <Fragment set:html={post.content || ''} />}
  </SinglePost> -->
    <!-- <RelatedPosts post={post} /> -->
  </div>
</Layout>
